<div class="container mx-auto p-4">
    <h1 class="text-2xl font-bold text-center mb-6">Add a New Book</h1>
    <form id="bookForm" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4" action="/books" method="POST">
        <div class="mb-4">
            <h2 class="text-lg font-semibold mb-4">Select an Image</h2>
            <input type="file" id="imageInput" accept="image/*" class="hidden" onchange="previewImage(event)">
            <label for="imageInput" class="flex flex-col items-center justify-center cursor-pointer border-2 border-dashed border-gray-300 rounded-lg p-4 hover:bg-gray-50 transition">
                <span class="text-gray-500">Click to upload an image</span>
                <span class="text-gray-400 text-sm">or drag and drop</span>
            </label>
            <div id="imagePreview" style="max-width: 100%; max-height: 300px;
            object-fit: contain;" class="mt-4 hidden">
                <img id="preview" src="" alt="Image Preview" class="w-[30%] aspect-ratio-2/1 h-auto rounded-lg shadow-md">
            </div>
        </div>

        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="title">Title:</label>
            <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="title" name="title" type="text" required>
        </div>

        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="description">Description:</label>
            <textarea class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="description" name="description" required></textarea>
        </div>

        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="author">Author:</label>
            <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="author" name="author" type="text" required>
        </div>

        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="category">Category:</label>
            <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="category" name="category" type="text" required>
        </div>

        <div class="bg-white p-6 rounded-lg shadow-md w-full">
        <h1 class="text-xl font-bold mb-4">Upload PDF to Dropbox</h1>
        <form id="uploadForm">
            <input type="file" id="fileInput" accept="application/pdf" class="mb-4 w-full border border-gray-300 rounded p-2" required>
            <button type="submit" class="w-full bg-blue-500 text-white rounded p-2 hover:bg-blue-600">Upload</button>
        </form>
    </div>

        <div class="flex items-center justify-between">
            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
                Add Book
            </button>
	    <div id="message"></div>
        </div>
    </form>
</div>

<script>
    const apiKey = 'c512e5d79c9b393786fee62ff368b800'; // Replace with your ImgBB API key
    const apiUrl = 'https://api.imgbb.com/1/upload';
    let selectedFile;

    function previewImage(event) {
        const input = event.target;
        const preview = document.getElementById('preview');
        const imagePreview = document.getElementById('imagePreview');

        if (input.files && input.files[0]) {
            selectedFile = input.files[0]; // Store the selected file
            const reader = new FileReader();
            reader.onload = function(e) {
                preview.src = e.target.result;
                imagePreview.classList.remove('hidden');
            }
            reader.readAsDataURL(selectedFile);
        }
    }

    document.getElementById('bookForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent the default form submission

        if (!selectedFile) {
            alert('Please select an image before adding a book.');
            return;
        }

        const formData = new FormData();
        formData.append('image', selectedFile);
        formData.append('key', apiKey);

        // Upload the image to ImgBB
        fetch(apiUrl, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const imageUrl = data.data.url;

                // Now send the book data along with the image URL to your backend
                const bookData = {
                    title: document.getElementById('title').value,
                    author: document.getElementById('author').value,
                    description: document.getElementById('description').value,
                    category: document.getElementById('category').value,
                    bookUrl: document.getElementById('bookUrl').value,
                    imageUrl: imageUrl
                };

                // Send the book data to your backend
                fetch('/books', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(bookData),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                            displayMessage('Book added successfully!', 'success');
                            // Redirect to a success page after a short delay
                            setTimeout(() => {
                                window.location.href = '/books'; // Change to your desired URL
                            }, 2000);
                        } else {
                            displayMessage(data.message || 'Failed to add book.', 'error');
                        }
                })
                .catch(error => console.error('Error sending to backend:', error));
            } else {
                console.error('Error uploading image:', data.error);
            }
        })
        .catch(error => console.error('Error uploading image:', error));
    });

    function displayMessage(message, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = message;
            messageDiv.className = type; // You can style messages based on type (success/error)
            messageDiv.style.color = type === 'success' ? 'green' : 'red'; // Simple color coding
        }
</script>
